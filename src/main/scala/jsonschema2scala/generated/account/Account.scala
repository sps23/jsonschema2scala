package jsonschema2scala.generated.account

import java.time.LocalDateTime

import jsonschema2scala.generated.{AccountingTreatment, CountryCode, CurrencyCode, RegulatoryBook}

case class Account(
    id: String,
    date: LocalDateTime,
    accFvChangeBeforeTaxes: Option[Int],
    accountingTreatment: Option[AccountingTreatment],
    accruedInterest: Option[Int],
    arrearsBalance: Option[Int],
    assetLiability: Option[AccountAssetLiability],
    balance: Option[Int],
    baseRate: Option[AccountBaseRate],
    behavioralCurveId: Option[String],
    breakDates: Option[List[LocalDateTime]],
    callDates: Option[List[LocalDateTime]],
    countryCode: Option[CountryCode],
    currencyCode: Option[CurrencyCode],
    customerId: Option[String],
    endDate: Option[LocalDateTime],
    encumbranceAmount: Option[Int],
    encumbranceType: Option[AccountEncumbranceType],
    fvhLevel: Option[Int],
    firstPaymentDate: Option[LocalDateTime],
    guaranteeAmount: Option[Int],
    guaranteeScheme: Option[AccountGuaranteeScheme],
    insolvencyRank: Option[Int],
    lastPaymentDate: Option[LocalDateTime],
    ledgerCode: Option[String],
    limitAmount: Option[Int],
    nextPaymentDate: Option[LocalDateTime],
    nextWithdrawalDate: Option[LocalDateTime],
    onBalanceSheet: Option[Boolean],
    prevPaymentDate: Option[LocalDateTime],
    productName: Option[String],
    purpose: Option[AccountPurpose],
    rate: Option[BigDecimal],
    rateType: Option[AccountRateType],
    regulatoryBook: Option[RegulatoryBook],
    reportingLei: Option[String],
    reportingEntityName: Option[String],
    riskCountryCode: Option[CountryCode],
    source: Option[String],
    startDate: Option[LocalDateTime],
    status: Option[AccountStatus],
    `type`: Option[AccountType],
    tradeDate: Option[LocalDateTime],
    ukFundingType: Option[AccountUkFundingType],
    versionId: Option[String],
    withdrawalPenalty: Option[Int],
    count: Option[Int],
    minimumBalanceEur: Option[Int]
)
