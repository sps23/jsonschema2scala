package jsonschema2scala.generated.derivative

import java.time.LocalDateTime

import jsonschema2scala.generated.{AccountingTreatment, CountryCode, CurrencyCode, RegulatoryBook}

case class Derivative(
    id: String,
    date: LocalDateTime,
    dealId: Option[String],
    accountingTreatment: Option[AccountingTreatment],
    accruedInterest: Option[Int],
    assetClass: Option[DerivativeAssetClass],
    assetLiability: Option[DerivativeAssetLiability],
    balance: Option[Int],
    baseRate: Option[DerivativeBaseRate],
    breakDates: Option[List[LocalDateTime]],
    callDates: Option[List[LocalDateTime]],
    currencyCode: Option[CurrencyCode],
    customerId: Option[String],
    delta: Option[BigDecimal],
    endDate: Option[LocalDateTime],
    fvhLevel: Option[Int],
    firstPaymentDate: Option[LocalDateTime],
    gamma: Option[BigDecimal],
    impliedVol: Option[BigDecimal],
    initialMargin: Option[Int],
    insolvencyRank: Option[Int],
    lastPaymentDate: Option[LocalDateTime],
    mnaId: Option[String],
    mtmClean: Option[Int],
    mtmDirty: Option[Int],
    nextExerciseDate: Option[LocalDateTime],
    nextPaymentAmount: Option[Int],
    nextPaymentDate: Option[LocalDateTime],
    nextReceiveAmount: Option[Int],
    nextReceiveDate: Option[LocalDateTime],
    nextResetDate: Option[LocalDateTime],
    notionalAmount: Option[Int],
    onBalanceSheet: Option[Boolean],
    paymentType: Option[DerivativePaymentType],
    prevPaymentDate: Option[LocalDateTime],
    productName: Option[String],
    purpose: Option[DerivativePurpose],
    rate: Option[BigDecimal],
    receiveType: Option[DerivativeReceiveType],
    regulatoryBook: Option[RegulatoryBook],
    reportingLei: Option[String],
    reportingEntityName: Option[String],
    rho: Option[BigDecimal],
    riskCountryCode: Option[CountryCode],
    settlementType: Option[DerivativeSettlementType],
    source: Option[String],
    startDate: Option[LocalDateTime],
    theta: Option[BigDecimal],
    `type`: Option[DerivativeType],
    tradeDate: Option[LocalDateTime],
    underlyingDerivativeId: Option[String],
    underlyingIssuerId: Option[String],
    underlyingSecurityId: Option[String],
    underlyingPrice: Option[BigDecimal],
    underlyingStrike: Option[BigDecimal],
    valueDate: Option[LocalDateTime],
    vega: Option[BigDecimal],
    versionId: Option[String]
)
