package jsonschema2scala.generated.loan

import java.time.LocalDateTime

import jsonschema2scala.generated.{AccountingTreatment, CountryCode, CurrencyCode, RegulatoryBook}

case class Loan(
    id: String,
    date: LocalDateTime,
    accFvChangeBeforeTaxes: Option[Int],
    accFvChangeCreditRisk: Option[Int],
    accountingTreatment: Option[AccountingTreatment],
    accruedInterestBalance: Option[Int],
    administration: Option[LoanAdministration],
    arrearsArrangement: Option[LoanArrearsArrangement],
    arrearsBalance: Option[Int],
    assetLiability: Option[LoanAssetLiability],
    balance: Option[Int],
    baseRate: Option[LoanBaseRate],
    behavioralCurveId: Option[String],
    countryCode: Option[CountryCode],
    cumRecoveries: Option[Int],
    currencyCode: Option[CurrencyCode],
    customers: Option[List[LoanCustomer]],
    ccf: Option[BigDecimal],
    encumbranceAmount: Option[Int],
    encumbranceEndDate: Option[LocalDateTime],
    endDate: Option[LocalDateTime],
    facilityCurrencyCode: Option[CurrencyCode],
    fvhLevel: Option[Int],
    firstPaymentDate: Option[LocalDateTime],
    guaranteeAmount: Option[Int],
    guarantorId: Option[String],
    impairmentAmount: Option[Int],
    impairmentStatus: Option[LoanImpairmentStatus],
    impairmentType: Option[LoanImpairmentType],
    interestRepaymentFrequency: Option[LoanInterestRepaymentFrequency],
    issuerId: Option[String],
    lastPaymentDate: Option[LocalDateTime],
    limitAmount: Option[Int],
    lnrfAmount: Option[Int],
    movement: Option[LoanMovement],
    nextPaymentDate: Option[LocalDateTime],
    notionalAmount: Option[Int],
    onBalanceSheet: Option[Boolean],
    originatorId: Option[String],
    originatorType: Option[LoanOriginatorType],
    prevPaymentDate: Option[LocalDateTime],
    productName: Option[String],
    provisionAmount: Option[Int],
    provisionType: Option[LoanProvisionType],
    purpose: Option[LoanPurpose],
    rate: Option[BigDecimal],
    rateType: Option[LoanRateType],
    regulated: Option[Boolean],
    regulatoryBook: Option[RegulatoryBook],
    repaymentFrequency: Option[LoanRepaymentFrequency],
    repaymentType: Option[LoanRepaymentType],
    reportingLei: Option[String],
    reportingEntityName: Option[String],
    riskCountryCode: Option[CountryCode],
    riskWeightStd: Option[BigDecimal],
    riskWeightIrb: Option[BigDecimal],
    secured: Option[Boolean],
    source: Option[String],
    startDate: Option[LocalDateTime],
    status: Option[LoanStatus],
    tradeDate: Option[LocalDateTime],
    `type`: Option[LoanType],
    versionId: Option[String],
    volAdj: Option[BigDecimal],
    count: Option[Int],
    minimumBalanceEur: Option[Int]
)
